fun fib(n) {
  if (n <= 1) return n;
  return fib(n - 2) + fib(n - 1);
}

var start = clock();

for (var i = 0; i < 20; i = i + 1) {
  print fib(i);
}

var end = clock();

print "";
print "Time to run fibonacci:";
print end - start;
print "";

// closures example
fun count(n) {
  while (n < 100) {
    if (n == 3) return n;
    print n;
    n = n + 1;
  }
}

count(1);

print "";

// Classes
class Bacon {
  eat() {
    print "Crunch crunch crunch!";
  }
}

Bacon().eat(); // Prints "Crunch crunch crunch!".

print "";

class Pet {

    init(animal){
        this.animal = animal;
    }

    printer(bop) {
        print "The " + this.animal + "'s nose goes " + bop + "!";
    }
}

var dog = Pet("dog");
var dogFunc = dog.printer;

dog.printer("bop");
dogFunc("boop");

print "";

// Inheritance
class Doughnut {
  cook() {
    print "Fry until golden brown.";
  }
}

class BostonCream < Doughnut {
  cook() {
    super.cook();
    print "Pipe full of custard and coat with chocolate.";
  }
}

BostonCream().cook();